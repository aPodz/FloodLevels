@page
@model FloodLevels.Pages.StationPages.OverviewModel
@{
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Overview</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
   
</head>
<body>
    <div class="container">
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card text-white bg-info mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Levels Exceeded This Year</h5>
                        <p class="card-text">@Model.ThisYearsErrorCount</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-warning mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Levels Exceeded This Month</h5>
                        <p class="card-text">@Model.ThisMonthsErrorCount</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-danger mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Levels Exceeded Today</h5>
                        <p class="card-text">@Model.TodaysErrorCount</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="d-flex flex-wrap">
            @if (Model.TodaysErrorCount > 0)
            {
                <div class="col-md-6">
                    <div>
                        <h4>Exceeded Water Levels Today:</h4>
                        <table class="table table-bordered table-hover table-striped">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Station</th>
                                    <th>Exceeds Count</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var stationError in Model.TodaysStationErrors.GroupBy(se => se.Title))
                                {
                                    <tr>
                                        <td>@stationError.Key</td>
                                        <td>@stationError.Count()</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }

            @if (Model.StationsWithMissingData.Count > 0)
            {
                <div class="col-md-6">
                    <div>
                        <h4>Stations with No Data (TimeOutinMinutes Exceeded):</h4>
                        <table class="table table-bordered table-hover table-striped">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Station</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var station in Model.StationsWithMissingData)
                                {
                                    <tr>
                                        <td>@station.Title</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            <div class="col-md-6">
                <canvas id="errorChart"></canvas>
            </div>
        </div>   
    </div>
    
    

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var errorData = @Html.Raw(Json.Serialize(Model.ErrorData));

            var currentDate = new Date();
            var currentMonth = currentDate.getMonth() + 1;
            var currentYear = currentDate.getFullYear();
            var filteredData = Object.entries(errorData)
                .filter(([date, count]) => {
                    var [year, month] = date.split('-').map(Number);
                    return year === currentYear && month === currentMonth;
                });

            var data = filteredData.map(([date, count]) => ({ date: new Date(date), count }));

            data.sort((a, b) => a.date - b.date);

            var dates = data.map(entry => entry.date.toLocaleDateString('cs-CZ', { year: 'numeric', month: '2-digit', day: '2-digit' }));

            var errorCounts = data.map(entry => entry.count);

            var ctx = document.getElementById('errorChart').getContext('2d');
            var chart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'Exceeds This Month',
                        data: errorCounts,
                        backgroundColor: 'rgba(255, 99, 132, 1)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 2
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Exceed Count'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Date'
                            }
                        }
                    }
                }
            });
        });
    </script>

    <style>
        .table-bordered {
            border: 1px solid #dee2e6;
        }

        .table-hover tbody tr:hover {
            background-color: #f1f1f1;
        }

        .table-striped tbody tr:nth-of-type(odd) {
            background-color: #f9f9f9;
        }

        .thead-dark th {
            background-color: #343a40;
            color: #fff;
        }

        .container {
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-top: 20px;
        }

        .list-group-item {
            background-color: transparent;
            border: none;
            color: #343a40;
        }

            .list-group-item:hover {
                background-color: #f8f9fa;
            }

        th, td {
            vertical-align: middle !important;
        }
    </style>
</body>
</html>





